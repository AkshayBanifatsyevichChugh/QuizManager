@using Microsoft.AspNetCore.Mvc.ModelBinding

@model LoginViewModel

@{
    ViewData["Title"] = "Log in";
}

@if (!ViewData.ModelState.IsValid)
{
    @Html.ValidationSummary(false, "There is a problem:", new { @class = "text-danger" });
}

<form method="post">

    <div class="form-check-input">

        <div class="form-group">
            <label asp-for="Email">Email:</label>
            <input type="text" class="form-control @(ViewData.ModelState[nameof(Model.Email)]?.ValidationState == ModelValidationState.Invalid  ? "is-invalid" : "")" id="email" name="@nameof(Model.Email)" value="@Model?.Email">
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(x => x.Email)
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Password">Password:</label>
            <input type="password" class="form-control @(ViewData.ModelState[nameof(Model.Password)]?.ValidationState == ModelValidationState.Invalid  ? "is-invalid" : "")" id="password" name="@nameof(Model.Password)" value="@Model?.Password">
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(x => x.Password)
            </div>
        </div>

        <button type="submit" class="btn btn-success" asp-route="@RouteNames.PostLogin">Log in</button>
    </div>

</form>